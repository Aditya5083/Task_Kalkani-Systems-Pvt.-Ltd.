<template>

 <center><h1>Search Anime Character</h1></center>

  <center><div>
   
    <form @submit.prevent="search">
      <input type="text" v-model="query" @input="search" />
    </form>
    <div v-if="results.length === 0 && query.length > 0">
      No results found for "{{ query }}".
    </div>
    <div v-else-if="results.length === 0 && query.length === 0">
      No search query entered. Showing top 15 characters:
    </div>
    <ul v-else>
      <li v-for="(result, index) in results" :key="index">
        {{ result.name }}
      </li>
    </ul>
    <button v-if="results.length > 0" @click="prevPage" :disabled="page === 1">
      Prev
    </button>
    <button v-if="results.length > 0" @click="nextPage" :disabled="page === totalPages">
      Next
    </button>
  </div></center>
</template>

<script>
  import { ref, onMounted, computed } from 'vue'
  const searchAnime = () => {
const url = `https://api.jikan.moe/v4/anime?q=${query.value}`
fetch(url)
.then(res => res.json())
.then(data => {
search_results.value = data.data
})
}
 
 
export default {
  data() {
    return {
      query: '',
      results: [],
      page: 1,
      totalPages: null
    }
  },
  methods: {
    async search() {
      const results = await fetchSearchResults(this.query, this.page)
      this.results = results.results
      this.totalPages = results.totalPages
    },
    prevPage() {
      this.page--
      this.search()
    },
    nextPage() {
      this.page++
      this.search()
    }
  }
}
</script>

<style>
* {
margin: 0;
padding: 0;
box-sizing: border-box;
font-family: 'Fira Sans', sans-serif;
}

body {
background-color: #EEE;
}

main {
margin: 0 auto;
max-width: 768px;
padding: 1.5rem;
}

h1 {
text-align: center;
margin-bottom: 1.5rem;
}

form {
display: flex;
max-width: 480px;
margin: 0 auto 1.5rem;
}

form input {
appearance: none;
outline: none;
border: none;
background: white;

display: block;
color: #888;
font-size: 1.125rem;
padding: 0.5rem 1rem;
width: 100%;
}

.button {
appearance: none;
outline: none;
border: none;
background: none;
cursor: pointer;

display: block;
padding: 0.5rem 1rem;
background-image: linear-gradient(to right, deeppink 50%, darkviolet 50%);
background-size: 200%;
color: white;
font-size: 1.125rem;
font-weight: bold;
text-transform: uppercase;
transition: 0.4s;
}

.button:hover {
background-position: right;
}

.results {
background-color: #fff;
border-radius: 0.5rem;
box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
max-height: 480px;
overflow-y: scroll;
margin-bottom: 1.5rem;
}

.result {
display: flex;
margin: 1rem;
padding: 1rem;
border: 1px solid #ccc;
border-radius: 5px;
transition: 0.4s;
}

.result img {
width: 100px;
border-radius: 1rem;
margin-right: 1rem;
}

.details {
flex: 1 1 0%;
display: flex;
align-items: flex-start;
flex-direction: column;
}

.details h3 {
font-size: 1.25rem;
margin-bottom: 0.5rem;
}

.details p {
font-size: 0.875rem;
margin-bottom: 1rem;
}

.details .button {
margin-left: auto;
}

.flex-1 {
display: block;
flex: 1 1 0%;
}

.myanime h2 {
color: #888;
font-weight: 400;
margin-bottom: 1.5rem;
}

.myanime .anime {
display: flex;
align-items: center;
margin-bottom: 1.5rem;
background-color: #FFF;
padding: 1rem;
border-radius: 0.5rem;
box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
}

.anime img {
width: 72px;
height: 72px;
object-fit: cover;
border-radius: 1rem;
margin-right: 1rem;
}

.anime h3 {
color: #888;
font-size: 1.125rem;
}

.anime .button:first-of-type {
margin-right: 0.5rem;
}

.anime .button:last-of-type {
margin-right: 0;
}
</style>